name: Build
on: 
  push:
    paths-ignore:
    - 'apidoc/**'
  pull_request:
    paths-ignore:
    - 'apidoc/**'
  workflow_dispatch:
  
# TODO: Exclude apidoc path
jobs:
  android:
    runs-on: ubuntu-latest
    name: Android
    env:
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      USE_CCACHE: 1
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Cache Node.js modules
      id: node-cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.OS }}-node-modules-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-modules-
          ${{ runner.OS }}-

    - run: npm ci
      name: Install dependencies
      if: steps.node-cache.outputs.cache-hit != 'true'

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - run: npm run lint:android
      name: Lint

    - run: npm i -g titanium
      name: Install Titanium CLI

    - run: ti sdk install 9.3.2.GA --force
      name: Install SDK 9.3.2.GA

    - name: Install ccache
      run: sudo apt-get install ccache

    - name: Retrieve ccache
      uses: actions/cache@v2
      with:
        path: ${{ env.CCACHE_DIR }}
        key: ${{ runner.os }}-ccache-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-ccache-

    - run: cd android && ti build -p android -l trace --build-only
      name: Build

    - name: Show summary of ccache configuration and statistics counters
      run: ccache --show-stats

    - name: Archive Android zip
      uses: actions/upload-artifact@v2
      with:
        name: ti.map-android.zip
        path: |
          android/dist/ti.map-android-*.zip

    - name: Cleanup Gradle Cache
      # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
      # Restoring these files from a GitHub Actions cache might cause problems for future builds.
      run: |
        rm -f ~/.gradle/caches/modules-2/modules-2.lock
        rm -f ~/.gradle/caches/modules-2/gc.properties

  ios:
    runs-on: macos-latest
    name: iOS
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Cache Node.js modules
      id: node-cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.OS }}-node-modules-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-modules-
          ${{ runner.OS }}-

    - run: npm ci
      name: Install dependencies
      if: steps.node-cache.outputs.cache-hit != 'true'

    - run: npm run lint:ios
      name: Lint

    - run: npm i -g titanium
      name: Install Titanium CLI

    - run: ti sdk install 9.3.2.GA --force
      name: Install SDK 9.3.2.GA

    - run: sed -i .bak 's/TITANIUM_SDK_VERSION = .*/TITANIUM_SDK_VERSION = 9.3.2.GA/' ios/titanium.xcconfig
      name: Set to Build with 9.3.2.GA SDK

    - run: cd ios && ti build -p ios -l trace --build-only
      name: Build

    - name: Archive iOS artifact
      uses: actions/upload-artifact@v2
      with:
        name: ti.map-ios.zip
        path: |
          ios/dist/ti.map-iphone-*.zip

  js:
    runs-on: ubuntu-latest
    name: JavaScript
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Cache Node.js modules
      id: node-cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.OS }}-node-modules-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-modules-
          ${{ runner.OS }}-

    - run: npm ci
      name: Install dependencies
      if: steps.node-cache.outputs.cache-hit != 'true'

    - run: npm run lint:js
      name: Lint
